package com.pismo.PismoAutomation;

import java.util.List;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import com.pismo.lib.appSpecific.UserPreference;
import com.pismo.lib.generic.Browser;
import com.pismo.lib.generic.ElementTags;
import com.pismo.lib.generic.Fixtures;
import com.pismo.lib.generic.SoftAssert;
import com.pismo.lib.generic.TestAssert;
import com.pismo.lib.generic.TestStatus;

public class UserPreferenceTests 
{
	private WebDriver driver =  null;
	private SoftAssert sassert=new SoftAssert();
	private TestAssert testassert = new TestAssert();
	
	@BeforeClass
	public void setUp() 
	{
		driver=Fixtures.setupFixture("User Preference test class setup initiated.");
	}
	
	@Test(description="TIMS ID : Trv604375c",priority=1)
	public void verifyPageUI()
	{
		UserPreference.gotoUserPreferencePage(driver);
		sassert.assertEquals(Browser.getElements().element(driver, ElementTags.headerUserPreference).getText(), 
				"User Preferences" , "FAILED | TIMS ID : Trv604375c | Page Header is incorrct.");
		sassert.assertEquals(Browser.getElements().element(driver, ElementTags.labelChooseLanguage).getText(),
				"Choose your preferred language:","FAILED | TIMS ID : Trv604375c | Label to select language is incorrect.");
		WebElement ele = Browser.getElements().element(driver, ElementTags.iconPreferenceHelp);
		sassert.assertTrue(ele.isDisplayed(), "FAILED | TIMS ID : Trv604375c | Help icon is not present.");
		Browser.getActions().click(ele);
		sassert.assertEquals(Browser.getElements().element(driver, ElementTags.popupPreferenceHelpMessage).getText(),
				"It changes the language of the portal. It won't change any text entered by users.",
				"FAILED | TIMS ID : Trv604375c | Help Message is incorrect.");
		Select sel = new Select(Browser.getElements().element(driver, ElementTags.dropdownSelectLanguage));
		List<WebElement> options = sel.getOptions();
		String [] actual = new String[9];
		String [] expected = {"Arabic (Saudi Arabia)","Chinese (China)","Chinese (Taiwan)","English (US)","French (France)",
				"German (Germany)","Italian (Italy)","Japanese (Japan)","Spanish (Spain)"};
		int i=0;
		for (WebElement option : options) {
			actual[i] = option.getText();
			i++;
		}
		sassert.assertEquals(actual, expected, "FAILED | TIMS ID : Trv604375c | Drop Dwon options are not equal.");
		sassert.showResults();
		TestStatus.pass("PASSED | TIMS ID : Trv604375c");
	}
	
	@Test(description="TIMS ID : Trv604376c",priority=2, enabled=false)
	public void verifySaveButtonFunctionality()
	{
		Browser.getElements().selectDropDownValueByVisibleText(
				Browser.getElements().element(driver, ElementTags.dropdownSelectLanguage), "Chinese (China)");
		Browser.getActions().click(Browser.getElements().element(driver, ElementTags.bttnSavePreferences));
		//TODO : Add assert for verification of user save message after fix.
		
		TestStatus.pass("PASSED | TIMS ID : Trv604376c");
	}
	
	@Test(description="TIMS ID : Trv604377c", priority=3)
	public void verifyCancelButtonFunctionality()
	{
		Browser.getElements().selectDropDownValueByVisibleText(
				Browser.getElements().element(driver, ElementTags.dropdownSelectLanguage), "Chinese (China)");
		Browser.getActions().click(Browser.getElements().element(driver, ElementTags.bttnCancelPreferences));
		testassert.assertEquals(Browser.getElements().element(driver, ElementTags.dropdownSelectLanguage).getText(), "English (US)",
				"FALIED | TIMS ID : Trv604377c | Changes are not reversed after clicking on Cancel button.");
		TestStatus.pass("PASSED | TIMS ID : Trv604377c");
	}
	
	
	@AfterClass(alwaysRun=true)
	public void tearDown()
	{
		Fixtures.tearDownFixture(driver);
	}

}
